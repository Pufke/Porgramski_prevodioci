Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: %empty
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement
   19          | for_statement
   20          | switch_statement

   21 $@3: %empty

   22 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET switch_body default _RBRACKET

   23 switch_body: _CASE literal _COLON statement break
   24            | switch_body _CASE literal _COLON statement break

   25 default: %empty
   26        | _DEFAULT _COLON statement

   27 break: %empty
   28      | _BREAK _SEMICOLON

   29 @4: %empty

   30 $@5: %empty

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

   32 compound_statement: _LBRACKET statement_list _RBRACKET

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   34 num_exp: exp
   35        | num_exp _AROP exp

   36 exp: literal
   37    | _ID
   38    | function_call
   39    | _LPAREN num_exp _RPAREN

   40 literal: _INT_NUMBER
   41        | _UINT_NUMBER

   42 $@6: %empty

   43 function_call: _ID $@6 _LPAREN argument _RPAREN

   44 argument: %empty
   45         | num_exp

   46 if_statement: if_part
   47             | if_part _ELSE statement

   48 @7: %empty

   49 $@8: %empty

   50 if_part: _IF _LPAREN @7 rel_exp $@8 _RPAREN statement

   51 rel_exp: num_exp _RELOP num_exp

   52 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 12
_IF (259) 50
_ELSE (260) 47
_RETURN (261) 52
_ID (262) 5 7 12 22 31 33 37 43
_INT_NUMBER (263) 40
_UINT_NUMBER (264) 41
_LPAREN (265) 5 22 31 39 43 50
_RPAREN (266) 5 22 31 39 43 50
_LBRACKET (267) 9 22 32
_RBRACKET (268) 9 22 32
_ASSIGN (269) 31 33
_SEMICOLON (270) 12 28 31 33 52
_AROP (271) 35
_RELOP (272) 51
_FOR (273) 31
_PLUSPLUS (274) 31
_SWITCH (275) 22
_CASE (276) 23 24
_COLON (277) 23 24 26
_BREAK (278) 28
_DEFAULT (279) 26
ONLY_IF (280)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
program (27)
    on left: 1, on right: 0
function_list (28)
    on left: 2 3, on right: 1 3
function (29)
    on left: 5, on right: 2 3
$@1 (30)
    on left: 4, on right: 5
parameter (31)
    on left: 6 7, on right: 5
body (32)
    on left: 9, on right: 5
$@2 (33)
    on left: 8, on right: 9
variable_list (34)
    on left: 10 11, on right: 9 11
variable (35)
    on left: 12, on right: 11
statement_list (36)
    on left: 13 14, on right: 9 14 32
statement (37)
    on left: 15 16 17 18 19 20, on right: 14 23 24 26 31 47 50
switch_statement (38)
    on left: 22, on right: 20
$@3 (39)
    on left: 21, on right: 22
switch_body (40)
    on left: 23 24, on right: 22 24
default (41)
    on left: 25 26, on right: 22
break (42)
    on left: 27 28, on right: 23 24
for_statement (43)
    on left: 31, on right: 19
@4 (44)
    on left: 29, on right: 31
$@5 (45)
    on left: 30, on right: 31
compound_statement (46)
    on left: 32, on right: 15
assignment_statement (47)
    on left: 33, on right: 16
num_exp (48)
    on left: 34 35, on right: 33 35 39 45 51 52
exp (49)
    on left: 36 37 38 39, on right: 34 35
literal (50)
    on left: 40 41, on right: 23 24 31 36
function_call (51)
    on left: 43, on right: 38
$@6 (52)
    on left: 42, on right: 43
argument (53)
    on left: 44 45, on right: 43
if_statement (54)
    on left: 46 47, on right: 17
if_part (55)
    on left: 50, on right: 46 47
@7 (56)
    on left: 48, on right: 50
$@8 (57)
    on left: 49, on right: 50
rel_exp (58)
    on left: 51, on right: 31 50
return_statement (59)
    on left: 52, on right: 18


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   14 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 30
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 22

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 23

   50 if_part: _IF . _LPAREN @7 rel_exp $@8 _RPAREN statement

    _LPAREN  shift, and go to state 38


State 24

   52 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 43
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 25

   33 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 47


State 26

   32 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 48


State 27

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 28

   31 for_statement: _FOR . _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _LPAREN  shift, and go to state 49


State 29

   22 switch_statement: _SWITCH . _LPAREN _ID $@3 _RPAREN _LBRACKET switch_body default _RBRACKET

    _LPAREN  shift, and go to state 50


State 30

   14 statement_list: statement_list statement .

    $default  reduce using rule 14 (statement_list)


State 31

   20 statement: switch_statement .

    $default  reduce using rule 20 (statement)


State 32

   19 statement: for_statement .

    $default  reduce using rule 19 (statement)


State 33

   15 statement: compound_statement .

    $default  reduce using rule 15 (statement)


State 34

   16 statement: assignment_statement .

    $default  reduce using rule 16 (statement)


State 35

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 36

   46 if_statement: if_part .
   47             | if_part . _ELSE statement

    _ELSE  shift, and go to state 51

    $default  reduce using rule 46 (if_statement)


State 37

   18 statement: return_statement .

    $default  reduce using rule 18 (statement)


State 38

   50 if_part: _IF _LPAREN . @7 rel_exp $@8 _RPAREN statement

    $default  reduce using rule 48 (@7)

    @7  go to state 52


State 39

   37 exp: _ID .
   43 function_call: _ID . $@6 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 42 ($@6)
    $default  reduce using rule 37 (exp)

    $@6  go to state 53


State 40

   40 literal: _INT_NUMBER .

    $default  reduce using rule 40 (literal)


State 41

   41 literal: _UINT_NUMBER .

    $default  reduce using rule 41 (literal)


State 42

   39 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 54
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 43

   35 num_exp: num_exp . _AROP exp
   52 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 55
    _AROP       shift, and go to state 56


State 44

   34 num_exp: exp .

    $default  reduce using rule 34 (num_exp)


State 45

   36 exp: literal .

    $default  reduce using rule 36 (exp)


State 46

   38 exp: function_call .

    $default  reduce using rule 38 (exp)


State 47

   33 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 57
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 48

   14 statement_list: statement_list . statement
   32 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 58
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 30
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 49

   31 for_statement: _FOR _LPAREN . _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ID  shift, and go to state 59


State 50

   22 switch_statement: _SWITCH _LPAREN . _ID $@3 _RPAREN _LBRACKET switch_body default _RBRACKET

    _ID  shift, and go to state 60


State 51

   47 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 61
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 52

   50 if_part: _IF _LPAREN @7 . rel_exp $@8 _RPAREN statement

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 62
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 63


State 53

   43 function_call: _ID $@6 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 64


State 54

   35 num_exp: num_exp . _AROP exp
   39 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 65
    _AROP    shift, and go to state 56


State 55

   52 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 52 (return_statement)


State 56

   35 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    exp            go to state 66
    literal        go to state 45
    function_call  go to state 46


State 57

   33 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   35 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 56


State 58

   32 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 32 (compound_statement)


State 59

   31 for_statement: _FOR _LPAREN _ID . _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ASSIGN  shift, and go to state 68


State 60

   22 switch_statement: _SWITCH _LPAREN _ID . $@3 _RPAREN _LBRACKET switch_body default _RBRACKET

    $default  reduce using rule 21 ($@3)

    $@3  go to state 69


State 61

   47 if_statement: if_part _ELSE statement .

    $default  reduce using rule 47 (if_statement)


State 62

   35 num_exp: num_exp . _AROP exp
   51 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 56
    _RELOP  shift, and go to state 70


State 63

   50 if_part: _IF _LPAREN @7 rel_exp . $@8 _RPAREN statement

    $default  reduce using rule 49 ($@8)

    $@8  go to state 71


State 64

   43 function_call: _ID $@6 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    $default  reduce using rule 44 (argument)

    num_exp        go to state 72
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    argument       go to state 73


State 65

   39 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 39 (exp)


State 66

   35 num_exp: num_exp _AROP exp .

    $default  reduce using rule 35 (num_exp)


State 67

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 33 (assignment_statement)


State 68

   31 for_statement: _FOR _LPAREN _ID _ASSIGN . literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 74


State 69

   22 switch_statement: _SWITCH _LPAREN _ID $@3 . _RPAREN _LBRACKET switch_body default _RBRACKET

    _RPAREN  shift, and go to state 75


State 70

   51 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 76
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46


State 71

   50 if_part: _IF _LPAREN @7 rel_exp $@8 . _RPAREN statement

    _RPAREN  shift, and go to state 77


State 72

   35 num_exp: num_exp . _AROP exp
   45 argument: num_exp .

    _AROP  shift, and go to state 56

    $default  reduce using rule 45 (argument)


State 73

   43 function_call: _ID $@6 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 78


State 74

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal . @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    $default  reduce using rule 29 (@4)

    @4  go to state 79


State 75

   22 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN . _LBRACKET switch_body default _RBRACKET

    _LBRACKET  shift, and go to state 80


State 76

   35 num_exp: num_exp . _AROP exp
   51 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 56

    $default  reduce using rule 51 (rel_exp)


State 77

   50 if_part: _IF _LPAREN @7 rel_exp $@8 _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 81
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 78

   43 function_call: _ID $@6 _LPAREN argument _RPAREN .

    $default  reduce using rule 43 (function_call)


State 79

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 . _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _SEMICOLON  shift, and go to state 82


State 80

   22 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET . switch_body default _RBRACKET

    _CASE  shift, and go to state 83

    switch_body  go to state 84


State 81

   50 if_part: _IF _LPAREN @7 rel_exp $@8 _RPAREN statement .

    $default  reduce using rule 50 (if_part)


State 82

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON . rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _ID           shift, and go to state 39
    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41
    _LPAREN       shift, and go to state 42

    num_exp        go to state 62
    exp            go to state 44
    literal        go to state 45
    function_call  go to state 46
    rel_exp        go to state 85


State 83

   23 switch_body: _CASE . literal _COLON statement break

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 86


State 84

   22 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET switch_body . default _RBRACKET
   24 switch_body: switch_body . _CASE literal _COLON statement break

    _CASE     shift, and go to state 87
    _DEFAULT  shift, and go to state 88

    $default  reduce using rule 25 (default)

    default  go to state 89


State 85

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp . $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    $default  reduce using rule 30 ($@5)

    $@5  go to state 90


State 86

   23 switch_body: _CASE literal . _COLON statement break

    _COLON  shift, and go to state 91


State 87

   24 switch_body: switch_body _CASE . literal _COLON statement break

    _INT_NUMBER   shift, and go to state 40
    _UINT_NUMBER  shift, and go to state 41

    literal  go to state 92


State 88

   26 default: _DEFAULT . _COLON statement

    _COLON  shift, and go to state 93


State 89

   22 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET switch_body default . _RBRACKET

    _RBRACKET  shift, and go to state 94


State 90

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 . _SEMICOLON _ID _PLUSPLUS _RPAREN statement

    _SEMICOLON  shift, and go to state 95


State 91

   23 switch_body: _CASE literal _COLON . statement break

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 96
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 92

   24 switch_body: switch_body _CASE literal . _COLON statement break

    _COLON  shift, and go to state 97


State 93

   26 default: _DEFAULT _COLON . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 98
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 94

   22 switch_statement: _SWITCH _LPAREN _ID $@3 _RPAREN _LBRACKET switch_body default _RBRACKET .

    $default  reduce using rule 22 (switch_statement)


State 95

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON . _ID _PLUSPLUS _RPAREN statement

    _ID  shift, and go to state 99


State 96

   23 switch_body: _CASE literal _COLON statement . break

    _BREAK  shift, and go to state 100

    $default  reduce using rule 27 (break)

    break  go to state 101


State 97

   24 switch_body: switch_body _CASE literal _COLON . statement break

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 102
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 98

   26 default: _DEFAULT _COLON statement .

    $default  reduce using rule 26 (default)


State 99

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID . _PLUSPLUS _RPAREN statement

    _PLUSPLUS  shift, and go to state 103


State 100

   28 break: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 104


State 101

   23 switch_body: _CASE literal _COLON statement break .

    $default  reduce using rule 23 (switch_body)


State 102

   24 switch_body: switch_body _CASE literal _COLON statement . break

    _BREAK  shift, and go to state 100

    $default  reduce using rule 27 (break)

    break  go to state 105


State 103

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS . _RPAREN statement

    _RPAREN  shift, and go to state 106


State 104

   28 break: _BREAK _SEMICOLON .

    $default  reduce using rule 28 (break)


State 105

   24 switch_body: switch_body _CASE literal _COLON statement break .

    $default  reduce using rule 24 (switch_body)


State 106

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _FOR       shift, and go to state 28
    _SWITCH    shift, and go to state 29

    statement             go to state 107
    switch_statement      go to state 31
    for_statement         go to state 32
    compound_statement    go to state 33
    assignment_statement  go to state 34
    if_statement          go to state 35
    if_part               go to state 36
    return_statement      go to state 37


State 107

   31 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON _ID _PLUSPLUS _RPAREN statement .

    $default  reduce using rule 31 (for_statement)
