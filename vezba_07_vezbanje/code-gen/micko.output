Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID

   11 $@2: %empty

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable: _TYPE _ID _SEMICOLON

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | inc_statement

   23 inc_statement: _ID _INC _SEMICOLON

   24 compound_statement: _LBRACKET statement_list _RBRACKET

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   26 num_exp: exp
   27        | num_exp _AROP exp

   28 exp: literal
   29    | _ID
   30    | function_call
   31    | _LPAREN num_exp _RPAREN

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@3: %empty

   35 function_call: _ID $@3 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 @4: %empty

   41 $@5: %empty

   42 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   43 rel_exp: num_exp _RELOP num_exp

   44 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 4 8 10 15
_IF (259) 42
_ELSE (260) 39
_RETURN (261) 44
_ID (262) 4 8 10 15 23 25 29 35
_INT_NUMBER (263) 32
_UINT_NUMBER (264) 33
_LPAREN (265) 8 31 35 42
_RPAREN (266) 8 31 35 42
_LBRACKET (267) 12 24
_RBRACKET (268) 12 24
_ASSIGN (269) 25
_SEMICOLON (270) 4 15 23 25 44
_AROP (271) 27
_RELOP (272) 43
_INC (273) 23
ONLY_IF (274)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
program (21)
    on left: 1, on right: 0
global_list (22)
    on left: 2 3, on right: 1 3
global_var (23)
    on left: 4, on right: 3
function_list (24)
    on left: 5 6, on right: 1 6
function (25)
    on left: 8, on right: 5 6
$@1 (26)
    on left: 7, on right: 8
parameter (27)
    on left: 9 10, on right: 8
body (28)
    on left: 12, on right: 8
$@2 (29)
    on left: 11, on right: 12
variable_list (30)
    on left: 13 14, on right: 12 14
variable (31)
    on left: 15, on right: 14
statement_list (32)
    on left: 16 17, on right: 12 17 24
statement (33)
    on left: 18 19 20 21 22, on right: 17 39 42
inc_statement (34)
    on left: 23, on right: 22
compound_statement (35)
    on left: 24, on right: 18
assignment_statement (36)
    on left: 25, on right: 19
num_exp (37)
    on left: 26 27, on right: 25 27 31 37 43 44
exp (38)
    on left: 28 29 30 31, on right: 26 27
literal (39)
    on left: 32 33, on right: 28
function_call (40)
    on left: 35, on right: 30
$@3 (41)
    on left: 34, on right: 35
argument (42)
    on left: 36 37, on right: 35
if_statement (43)
    on left: 38 39, on right: 20
if_part (44)
    on left: 42, on right: 38 39
@4 (45)
    on left: 40, on right: 42
$@5 (46)
    on left: 41, on right: 42
rel_exp (47)
    on left: 43, on right: 42
return_statement (48)
    on left: 44, on right: 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16


State 15

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 17


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 18

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 21

   12 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 11 ($@2)

    $@2       go to state 23
    variable  go to state 24


State 22

   15 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 23

   12 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 26


State 24

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 25

   15 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 27


State 26

   12 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32

    statement             go to state 33
    inc_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 27

   15 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 28

   42 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 40


State 29

   44 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 45
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 30

   23 inc_statement: _ID . _INC _SEMICOLON
   25 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 49
    _INC     shift, and go to state 50


State 31

   24 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 51


State 32

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 33

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 34

   22 statement: inc_statement .

    $default  reduce using rule 22 (statement)


State 35

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 36

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 37

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 38

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 52

    $default  reduce using rule 38 (if_statement)


State 39

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 40

   42 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 40 (@4)

    @4  go to state 53


State 41

   29 exp: _ID .
   35 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 34 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 54


State 42

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 43

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 44

   31 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 55
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 45

   27 num_exp: num_exp . _AROP exp
   44 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 56
    _AROP       shift, and go to state 57


State 46

   26 num_exp: exp .

    $default  reduce using rule 26 (num_exp)


State 47

   28 exp: literal .

    $default  reduce using rule 28 (exp)


State 48

   30 exp: function_call .

    $default  reduce using rule 30 (exp)


State 49

   25 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 58
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 50

   23 inc_statement: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 59


State 51

   17 statement_list: statement_list . statement
   24 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 60

    statement             go to state 33
    inc_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 52

   39 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 61
    inc_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 53

   42 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 62
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    rel_exp        go to state 63


State 54

   35 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 64


State 55

   27 num_exp: num_exp . _AROP exp
   31 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 65
    _AROP    shift, and go to state 57


State 56

   44 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 44 (return_statement)


State 57

   27 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    exp            go to state 66
    literal        go to state 47
    function_call  go to state 48


State 58

   25 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   27 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 57


State 59

   23 inc_statement: _ID _INC _SEMICOLON .

    $default  reduce using rule 23 (inc_statement)


State 60

   24 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 24 (compound_statement)


State 61

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 62

   27 num_exp: num_exp . _AROP exp
   43 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 57
    _RELOP  shift, and go to state 68


State 63

   42 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 41 ($@5)

    $@5  go to state 69


State 64

   35 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    $default  reduce using rule 36 (argument)

    num_exp        go to state 70
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48
    argument       go to state 71


State 65

   31 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 31 (exp)


State 66

   27 num_exp: num_exp _AROP exp .

    $default  reduce using rule 27 (num_exp)


State 67

   25 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 25 (assignment_statement)


State 68

   43 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 41
    _INT_NUMBER   shift, and go to state 42
    _UINT_NUMBER  shift, and go to state 43
    _LPAREN       shift, and go to state 44

    num_exp        go to state 72
    exp            go to state 46
    literal        go to state 47
    function_call  go to state 48


State 69

   42 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 73


State 70

   27 num_exp: num_exp . _AROP exp
   37 argument: num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 37 (argument)


State 71

   35 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 74


State 72

   27 num_exp: num_exp . _AROP exp
   43 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 43 (rel_exp)


State 73

   42 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 75
    inc_statement         go to state 34
    compound_statement    go to state 35
    assignment_statement  go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 74

   35 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)


State 75

   42 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 42 (if_part)
