Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | _TYPE _ID

   11 $@2: %empty

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   13 variable_list: %empty
   14              | variable_list variable

   15 variable: _TYPE _ID _SEMICOLON

   16 statement_list: %empty
   17               | statement_list statement

   18 statement: compound_statement
   19          | assignment_statement
   20          | if_statement
   21          | return_statement
   22          | iterate_statement
   23          | for_in

   24 @3: %empty

   25 $@4: %empty

   26 for_in: _FOR _ID @3 _IN _LPAREN literal _DVETACKE literal $@4 _RPAREN statement

   27 @5: %empty

   28 $@6: %empty

   29 iterate_statement: _ITERATE _ID @5 literal _TO literal $@6 statement

   30 compound_statement: _LBRACKET statement_list _RBRACKET

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp

   34 exp: literal
   35    | _ID
   36    | function_call
   37    | _LPAREN num_exp _RPAREN

   38 literal: _INT_NUMBER
   39        | _UINT_NUMBER

   40 $@7: %empty

   41 function_call: _ID $@7 _LPAREN argument _RPAREN

   42 argument: %empty
   43         | num_exp

   44 if_statement: if_part
   45             | if_part _ELSE statement

   46 @8: %empty

   47 $@9: %empty

   48 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN statement

   49 rel_exp: num_exp _RELOP num_exp

   50 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 4 8 10 15
_IF (259) 48
_ELSE (260) 45
_RETURN (261) 50
_ID (262) 4 8 10 15 26 29 31 35 41
_INT_NUMBER (263) 38
_UINT_NUMBER (264) 39
_LPAREN (265) 8 26 37 41 48
_RPAREN (266) 8 26 37 41 48
_LBRACKET (267) 12 30
_RBRACKET (268) 12 30
_ASSIGN (269) 31
_SEMICOLON (270) 4 15 31 50
_AROP (271) 33
_RELOP (272) 49
_IN (273) 26
_FOR (274) 26
_DVETACKE (275) 26
_ITERATE (276) 29
_TO (277) 29
ONLY_IF (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1, on right: 0
global_list (26)
    on left: 2 3, on right: 1 3
global_var (27)
    on left: 4, on right: 3
function_list (28)
    on left: 5 6, on right: 1 6
function (29)
    on left: 8, on right: 5 6
$@1 (30)
    on left: 7, on right: 8
parameter (31)
    on left: 9 10, on right: 8
body (32)
    on left: 12, on right: 8
$@2 (33)
    on left: 11, on right: 12
variable_list (34)
    on left: 13 14, on right: 12 14
variable (35)
    on left: 15, on right: 14
statement_list (36)
    on left: 16 17, on right: 12 17 30
statement (37)
    on left: 18 19 20 21 22 23, on right: 17 26 29 45 48
for_in (38)
    on left: 26, on right: 23
@3 (39)
    on left: 24, on right: 26
$@4 (40)
    on left: 25, on right: 26
iterate_statement (41)
    on left: 29, on right: 22
@5 (42)
    on left: 27, on right: 29
$@6 (43)
    on left: 28, on right: 29
compound_statement (44)
    on left: 30, on right: 18
assignment_statement (45)
    on left: 31, on right: 19
num_exp (46)
    on left: 32 33, on right: 31 33 37 43 49 50
exp (47)
    on left: 34 35 36 37, on right: 32 33
literal (48)
    on left: 38 39, on right: 26 29 34
function_call (49)
    on left: 41, on right: 36
$@7 (50)
    on left: 40, on right: 41
argument (51)
    on left: 42 43, on right: 41
if_statement (52)
    on left: 44 45, on right: 20
if_part (53)
    on left: 48, on right: 44 45
@8 (54)
    on left: 46, on right: 48
$@9 (55)
    on left: 47, on right: 48
rel_exp (56)
    on left: 49, on right: 48
return_statement (57)
    on left: 50, on right: 21


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16


State 15

   10 parameter: _TYPE . _ID

    _ID  shift, and go to state 17


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 18


State 17

   10 parameter: _TYPE _ID .

    $default  reduce using rule 10 (parameter)


State 18

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 19

    body  go to state 20


State 19

   12 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 13 (variable_list)

    variable_list  go to state 21


State 20

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 21

   12 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   14 variable_list: variable_list . variable

    _TYPE  shift, and go to state 22

    $default  reduce using rule 11 ($@2)

    $@2       go to state 23
    variable  go to state 24


State 22

   15 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 25


State 23

   12 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 26


State 24

   14 variable_list: variable_list variable .

    $default  reduce using rule 14 (variable_list)


State 25

   15 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 27


State 26

   12 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   17 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _FOR       shift, and go to state 33
    _ITERATE   shift, and go to state 34

    statement             go to state 35
    for_in                go to state 36
    iterate_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 27

   15 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 28

   48 if_part: _IF . _LPAREN @8 rel_exp $@9 _RPAREN statement

    _LPAREN  shift, and go to state 43


State 29

   50 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    num_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 30

   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 52


State 31

   30 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 16 (statement_list)

    statement_list  go to state 53


State 32

   12 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 12 (body)


State 33

   26 for_in: _FOR . _ID @3 _IN _LPAREN literal _DVETACKE literal $@4 _RPAREN statement

    _ID  shift, and go to state 54


State 34

   29 iterate_statement: _ITERATE . _ID @5 literal _TO literal $@6 statement

    _ID  shift, and go to state 55


State 35

   17 statement_list: statement_list statement .

    $default  reduce using rule 17 (statement_list)


State 36

   23 statement: for_in .

    $default  reduce using rule 23 (statement)


State 37

   22 statement: iterate_statement .

    $default  reduce using rule 22 (statement)


State 38

   18 statement: compound_statement .

    $default  reduce using rule 18 (statement)


State 39

   19 statement: assignment_statement .

    $default  reduce using rule 19 (statement)


State 40

   20 statement: if_statement .

    $default  reduce using rule 20 (statement)


State 41

   44 if_statement: if_part .
   45             | if_part . _ELSE statement

    _ELSE  shift, and go to state 56

    $default  reduce using rule 44 (if_statement)


State 42

   21 statement: return_statement .

    $default  reduce using rule 21 (statement)


State 43

   48 if_part: _IF _LPAREN . @8 rel_exp $@9 _RPAREN statement

    $default  reduce using rule 46 (@8)

    @8  go to state 57


State 44

   35 exp: _ID .
   41 function_call: _ID . $@7 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 40 ($@7)
    $default  reduce using rule 35 (exp)

    $@7  go to state 58


State 45

   38 literal: _INT_NUMBER .

    $default  reduce using rule 38 (literal)


State 46

   39 literal: _UINT_NUMBER .

    $default  reduce using rule 39 (literal)


State 47

   37 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    num_exp        go to state 59
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 48

   33 num_exp: num_exp . _AROP exp
   50 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 60
    _AROP       shift, and go to state 61


State 49

   32 num_exp: exp .

    $default  reduce using rule 32 (num_exp)


State 50

   34 exp: literal .

    $default  reduce using rule 34 (exp)


State 51

   36 exp: function_call .

    $default  reduce using rule 36 (exp)


State 52

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    num_exp        go to state 62
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 53

   17 statement_list: statement_list . statement
   30 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 63
    _FOR       shift, and go to state 33
    _ITERATE   shift, and go to state 34

    statement             go to state 35
    for_in                go to state 36
    iterate_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 54

   26 for_in: _FOR _ID . @3 _IN _LPAREN literal _DVETACKE literal $@4 _RPAREN statement

    $default  reduce using rule 24 (@3)

    @3  go to state 64


State 55

   29 iterate_statement: _ITERATE _ID . @5 literal _TO literal $@6 statement

    $default  reduce using rule 27 (@5)

    @5  go to state 65


State 56

   45 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _ITERATE   shift, and go to state 34

    statement             go to state 66
    for_in                go to state 36
    iterate_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 57

   48 if_part: _IF _LPAREN @8 . rel_exp $@9 _RPAREN statement

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    num_exp        go to state 67
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 68


State 58

   41 function_call: _ID $@7 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 69


State 59

   33 num_exp: num_exp . _AROP exp
   37 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 70
    _AROP    shift, and go to state 61


State 60

   50 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 50 (return_statement)


State 61

   33 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    exp            go to state 71
    literal        go to state 50
    function_call  go to state 51


State 62

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 72
    _AROP       shift, and go to state 61


State 63

   30 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 30 (compound_statement)


State 64

   26 for_in: _FOR _ID @3 . _IN _LPAREN literal _DVETACKE literal $@4 _RPAREN statement

    _IN  shift, and go to state 73


State 65

   29 iterate_statement: _ITERATE _ID @5 . literal _TO literal $@6 statement

    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46

    literal  go to state 74


State 66

   45 if_statement: if_part _ELSE statement .

    $default  reduce using rule 45 (if_statement)


State 67

   33 num_exp: num_exp . _AROP exp
   49 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 61
    _RELOP  shift, and go to state 75


State 68

   48 if_part: _IF _LPAREN @8 rel_exp . $@9 _RPAREN statement

    $default  reduce using rule 47 ($@9)

    $@9  go to state 76


State 69

   41 function_call: _ID $@7 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    $default  reduce using rule 42 (argument)

    num_exp        go to state 77
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 78


State 70

   37 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 37 (exp)


State 71

   33 num_exp: num_exp _AROP exp .

    $default  reduce using rule 33 (num_exp)


State 72

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 73

   26 for_in: _FOR _ID @3 _IN . _LPAREN literal _DVETACKE literal $@4 _RPAREN statement

    _LPAREN  shift, and go to state 79


State 74

   29 iterate_statement: _ITERATE _ID @5 literal . _TO literal $@6 statement

    _TO  shift, and go to state 80


State 75

   49 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 44
    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46
    _LPAREN       shift, and go to state 47

    num_exp        go to state 81
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51


State 76

   48 if_part: _IF _LPAREN @8 rel_exp $@9 . _RPAREN statement

    _RPAREN  shift, and go to state 82


State 77

   33 num_exp: num_exp . _AROP exp
   43 argument: num_exp .

    _AROP  shift, and go to state 61

    $default  reduce using rule 43 (argument)


State 78

   41 function_call: _ID $@7 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 83


State 79

   26 for_in: _FOR _ID @3 _IN _LPAREN . literal _DVETACKE literal $@4 _RPAREN statement

    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46

    literal  go to state 84


State 80

   29 iterate_statement: _ITERATE _ID @5 literal _TO . literal $@6 statement

    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46

    literal  go to state 85


State 81

   33 num_exp: num_exp . _AROP exp
   49 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 61

    $default  reduce using rule 49 (rel_exp)


State 82

   48 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _ITERATE   shift, and go to state 34

    statement             go to state 86
    for_in                go to state 36
    iterate_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 83

   41 function_call: _ID $@7 _LPAREN argument _RPAREN .

    $default  reduce using rule 41 (function_call)


State 84

   26 for_in: _FOR _ID @3 _IN _LPAREN literal . _DVETACKE literal $@4 _RPAREN statement

    _DVETACKE  shift, and go to state 87


State 85

   29 iterate_statement: _ITERATE _ID @5 literal _TO literal . $@6 statement

    $default  reduce using rule 28 ($@6)

    $@6  go to state 88


State 86

   48 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN statement .

    $default  reduce using rule 48 (if_part)


State 87

   26 for_in: _FOR _ID @3 _IN _LPAREN literal _DVETACKE . literal $@4 _RPAREN statement

    _INT_NUMBER   shift, and go to state 45
    _UINT_NUMBER  shift, and go to state 46

    literal  go to state 89


State 88

   29 iterate_statement: _ITERATE _ID @5 literal _TO literal $@6 . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _ITERATE   shift, and go to state 34

    statement             go to state 90
    for_in                go to state 36
    iterate_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 89

   26 for_in: _FOR _ID @3 _IN _LPAREN literal _DVETACKE literal . $@4 _RPAREN statement

    $default  reduce using rule 25 ($@4)

    $@4  go to state 91


State 90

   29 iterate_statement: _ITERATE _ID @5 literal _TO literal $@6 statement .

    $default  reduce using rule 29 (iterate_statement)


State 91

   26 for_in: _FOR _ID @3 _IN _LPAREN literal _DVETACKE literal $@4 . _RPAREN statement

    _RPAREN  shift, and go to state 92


State 92

   26 for_in: _FOR _ID @3 _IN _LPAREN literal _DVETACKE literal $@4 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _FOR       shift, and go to state 33
    _ITERATE   shift, and go to state 34

    statement             go to state 93
    for_in                go to state 36
    iterate_statement     go to state 37
    compound_statement    go to state 38
    assignment_statement  go to state 39
    if_statement          go to state 40
    if_part               go to state 41
    return_statement      go to state 42


State 93

   26 for_in: _FOR _ID @3 _IN _LPAREN literal _DVETACKE literal $@4 _RPAREN statement .

    $default  reduce using rule 26 (for_in)
