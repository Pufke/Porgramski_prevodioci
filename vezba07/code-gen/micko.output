Grammar

    0 $accept: program $end

    1 program: global_variable_list function_list

    2 global_variable_list: %empty
    3                     | global_variable_list _TYPE _ID _SEMICOLON

    4 function_list: function
    5              | function_list function

    6 $@1: %empty

    7 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    8 parameter: %empty
    9          | _TYPE _ID

   10 $@2: %empty

   11 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   12 variable_list: %empty
   13              | variable_list variable

   14 variable: _TYPE _ID _SEMICOLON

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | inc_statement

   22 inc_statement: _ID _PLUSPLUS _SEMICOLON

   23 compound_statement: _LBRACKET statement_list _RBRACKET

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   25 num_exp: exp
   26        | num_exp _AROP exp

   27 exp: literal
   28    | _ID
   29    | function_call
   30    | _LPAREN num_exp _RPAREN
   31    | _ID _PLUSPLUS

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@3: %empty

   35 function_call: _ID $@3 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp

   38 if_statement: if_part
   39             | if_part _ELSE statement

   40 @4: %empty

   41 $@5: %empty

   42 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   43 rel_exp: num_exp _RELOP num_exp

   44 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 3 7 9 14
_IF (259) 42
_ELSE (260) 39
_RETURN (261) 44
_ID (262) 3 7 9 14 22 24 28 31 35
_INT_NUMBER (263) 32
_UINT_NUMBER (264) 33
_LPAREN (265) 7 30 35 42
_RPAREN (266) 7 30 35 42
_LBRACKET (267) 11 23
_RBRACKET (268) 11 23
_ASSIGN (269) 24
_SEMICOLON (270) 3 14 22 24 44
_AROP (271) 26
_RELOP (272) 43
_PLUSPLUS (273) 22 31
ONLY_IF (274)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
program (21)
    on left: 1, on right: 0
global_variable_list (22)
    on left: 2 3, on right: 1 3
function_list (23)
    on left: 4 5, on right: 1 5
function (24)
    on left: 7, on right: 4 5
$@1 (25)
    on left: 6, on right: 7
parameter (26)
    on left: 8 9, on right: 7
body (27)
    on left: 11, on right: 7
$@2 (28)
    on left: 10, on right: 11
variable_list (29)
    on left: 12 13, on right: 11 13
variable (30)
    on left: 14, on right: 13
statement_list (31)
    on left: 15 16, on right: 11 16 23
statement (32)
    on left: 17 18 19 20 21, on right: 16 39 42
inc_statement (33)
    on left: 22, on right: 21
compound_statement (34)
    on left: 23, on right: 17
assignment_statement (35)
    on left: 24, on right: 18
num_exp (36)
    on left: 25 26, on right: 24 26 30 37 43 44
exp (37)
    on left: 27 28 29 30 31, on right: 25 26
literal (38)
    on left: 32 33, on right: 27
function_call (39)
    on left: 35, on right: 29
$@3 (40)
    on left: 34, on right: 35
argument (41)
    on left: 36 37, on right: 35
if_statement (42)
    on left: 38 39, on right: 19
if_part (43)
    on left: 42, on right: 38 39
@4 (44)
    on left: 40, on right: 42
$@5 (45)
    on left: 41, on right: 42
rel_exp (46)
    on left: 43, on right: 42
return_statement (47)
    on left: 44, on right: 20


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_variable_list)

    program               go to state 1
    global_variable_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_variable_list . function_list
    3 global_variable_list: global_variable_list . _TYPE _ID _SEMICOLON

    _TYPE  shift, and go to state 4

    function_list  go to state 5
    function       go to state 6


State 3

    0 $accept: program $end .

    $default  accept


State 4

    3 global_variable_list: global_variable_list _TYPE . _ID _SEMICOLON
    7 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 7


State 5

    1 program: global_variable_list function_list .
    5 function_list: function_list . function

    _TYPE  shift, and go to state 8

    $default  reduce using rule 1 (program)

    function  go to state 9


State 6

    4 function_list: function .

    $default  reduce using rule 4 (function_list)


State 7

    3 global_variable_list: global_variable_list _TYPE _ID . _SEMICOLON
    7 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 10

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 8

    7 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 12


State 9

    5 function_list: function_list function .

    $default  reduce using rule 5 (function_list)


State 10

    3 global_variable_list: global_variable_list _TYPE _ID _SEMICOLON .

    $default  reduce using rule 3 (global_variable_list)


State 11

    7 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 13


State 12

    7 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 6 ($@1)

    $@1  go to state 11


State 13

    7 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 14

    $default  reduce using rule 8 (parameter)

    parameter  go to state 15


State 14

    9 parameter: _TYPE . _ID

    _ID  shift, and go to state 16


State 15

    7 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 17


State 16

    9 parameter: _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 17

    7 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 18

    body  go to state 19


State 18

   11 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 12 (variable_list)

    variable_list  go to state 20


State 19

    7 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 7 (function)


State 20

   11 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   13 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 10 ($@2)

    $@2       go to state 22
    variable  go to state 23


State 21

   14 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 24


State 22

   11 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 25


State 23

   13 variable_list: variable_list variable .

    $default  reduce using rule 13 (variable_list)


State 24

   14 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 26


State 25

   11 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _RBRACKET  shift, and go to state 31

    statement             go to state 32
    inc_statement         go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 26

   14 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 27

   42 if_part: _IF . _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 39


State 28

   44 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    num_exp        go to state 44
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 29

   22 inc_statement: _ID . _PLUSPLUS _SEMICOLON
   24 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN    shift, and go to state 48
    _PLUSPLUS  shift, and go to state 49


State 30

   23 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 50


State 31

   11 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 11 (body)


State 32

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 33

   21 statement: inc_statement .

    $default  reduce using rule 21 (statement)


State 34

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 35

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 36

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 37

   38 if_statement: if_part .
   39             | if_part . _ELSE statement

    _ELSE  shift, and go to state 51

    $default  reduce using rule 38 (if_statement)


State 38

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 39

   42 if_part: _IF _LPAREN . @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 40 (@4)

    @4  go to state 52


State 40

   28 exp: _ID .
   31    | _ID . _PLUSPLUS
   35 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _PLUSPLUS  shift, and go to state 53

    _LPAREN   reduce using rule 34 ($@3)
    $default  reduce using rule 28 (exp)

    $@3  go to state 54


State 41

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 42

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 43

   30 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    num_exp        go to state 55
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 44

   26 num_exp: num_exp . _AROP exp
   44 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 56
    _AROP       shift, and go to state 57


State 45

   25 num_exp: exp .

    $default  reduce using rule 25 (num_exp)


State 46

   27 exp: literal .

    $default  reduce using rule 27 (exp)


State 47

   29 exp: function_call .

    $default  reduce using rule 29 (exp)


State 48

   24 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    num_exp        go to state 58
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 49

   22 inc_statement: _ID _PLUSPLUS . _SEMICOLON

    _SEMICOLON  shift, and go to state 59


State 50

   16 statement_list: statement_list . statement
   23 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30
    _RBRACKET  shift, and go to state 60

    statement             go to state 32
    inc_statement         go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 51

   39 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30

    statement             go to state 61
    inc_statement         go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 52

   42 if_part: _IF _LPAREN @4 . rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    num_exp        go to state 62
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    rel_exp        go to state 63


State 53

   31 exp: _ID _PLUSPLUS .

    $default  reduce using rule 31 (exp)


State 54

   35 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 64


State 55

   26 num_exp: num_exp . _AROP exp
   30 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 65
    _AROP    shift, and go to state 57


State 56

   44 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 44 (return_statement)


State 57

   26 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    exp            go to state 66
    literal        go to state 46
    function_call  go to state 47


State 58

   24 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   26 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 57


State 59

   22 inc_statement: _ID _PLUSPLUS _SEMICOLON .

    $default  reduce using rule 22 (inc_statement)


State 60

   23 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 23 (compound_statement)


State 61

   39 if_statement: if_part _ELSE statement .

    $default  reduce using rule 39 (if_statement)


State 62

   26 num_exp: num_exp . _AROP exp
   43 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 57
    _RELOP  shift, and go to state 68


State 63

   42 if_part: _IF _LPAREN @4 rel_exp . $@5 _RPAREN statement

    $default  reduce using rule 41 ($@5)

    $@5  go to state 69


State 64

   35 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    $default  reduce using rule 36 (argument)

    num_exp        go to state 70
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47
    argument       go to state 71


State 65

   30 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 30 (exp)


State 66

   26 num_exp: num_exp _AROP exp .

    $default  reduce using rule 26 (num_exp)


State 67

   24 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 24 (assignment_statement)


State 68

   43 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 40
    _INT_NUMBER   shift, and go to state 41
    _UINT_NUMBER  shift, and go to state 42
    _LPAREN       shift, and go to state 43

    num_exp        go to state 72
    exp            go to state 45
    literal        go to state 46
    function_call  go to state 47


State 69

   42 if_part: _IF _LPAREN @4 rel_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 73


State 70

   26 num_exp: num_exp . _AROP exp
   37 argument: num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 37 (argument)


State 71

   35 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 74


State 72

   26 num_exp: num_exp . _AROP exp
   43 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 57

    $default  reduce using rule 43 (rel_exp)


State 73

   42 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 27
    _RETURN    shift, and go to state 28
    _ID        shift, and go to state 29
    _LBRACKET  shift, and go to state 30

    statement             go to state 75
    inc_statement         go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 74

   35 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)


State 75

   42 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement .

    $default  reduce using rule 42 (if_part)
