Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 variable: _TYPE _ID _SEMICOLON

   12 statement_list: %empty
   13               | statement_list statement

   14 statement: compound_statement
   15          | assignment_statement
   16          | if_statement
   17          | return_statement
   18          | read_data_statement

   19 $@2: %empty

   20 read_data_statement: _READ _ID $@2 _FROM data_section _DO statement

   21 data_section: _DATA konstante
   22             | data_section _DATA konstante

   23 konstante: literal
   24          | konstante _ZAREZ literal

   25 compound_statement: _LBRACKET statement_list _RBRACKET

   26 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   27 num_exp: exp
   28        | num_exp _AROP exp

   29 exp: literal
   30    | _ID
   31    | function_call
   32    | _LPAREN num_exp _RPAREN

   33 literal: _INT_NUMBER
   34        | _UINT_NUMBER

   35 $@3: %empty

   36 function_call: _ID $@3 _LPAREN argument _RPAREN

   37 argument: %empty
   38         | num_exp

   39 if_statement: if_part
   40             | if_part _ELSE statement

   41 if_part: _IF _LPAREN rel_exp _RPAREN statement

   42 rel_exp: num_exp _RELOP num_exp

   43 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 11
_IF (259) 41
_ELSE (260) 40
_RETURN (261) 43
_ID (262) 5 7 11 20 26 30 36
_INT_NUMBER (263) 33
_UINT_NUMBER (264) 34
_LPAREN (265) 5 32 36 41
_RPAREN (266) 5 32 36 41
_LBRACKET (267) 8 25
_RBRACKET (268) 8 25
_ASSIGN (269) 26
_SEMICOLON (270) 11 26 43
_AROP (271) 28
_RELOP (272) 42
_READ (273) 20
_FROM (274) 20
_DATA (275) 21 22
_DO (276) 20
_ZAREZ (277) 24
ONLY_IF (278)


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
program (25)
    on left: 1, on right: 0
function_list (26)
    on left: 2 3, on right: 1 3
function (27)
    on left: 5, on right: 2 3
$@1 (28)
    on left: 4, on right: 5
parameter (29)
    on left: 6 7, on right: 5
body (30)
    on left: 8, on right: 5
variable_list (31)
    on left: 9 10, on right: 8 10
variable (32)
    on left: 11, on right: 10
statement_list (33)
    on left: 12 13, on right: 8 13 25
statement (34)
    on left: 14 15 16 17 18, on right: 13 20 40 41
read_data_statement (35)
    on left: 20, on right: 18
$@2 (36)
    on left: 19, on right: 20
data_section (37)
    on left: 21 22, on right: 20 22
konstante (38)
    on left: 23 24, on right: 21 22 24
compound_statement (39)
    on left: 25, on right: 14
assignment_statement (40)
    on left: 26, on right: 15
num_exp (41)
    on left: 27 28, on right: 26 28 32 38 42 43
exp (42)
    on left: 29 30 31 32, on right: 27 28
literal (43)
    on left: 33 34, on right: 23 24 29
function_call (44)
    on left: 36, on right: 31
$@3 (45)
    on left: 35, on right: 36
argument (46)
    on left: 37 38, on right: 36
if_statement (47)
    on left: 39 40, on right: 16
if_part (48)
    on left: 41, on right: 39 40
rel_exp (49)
    on left: 42, on right: 41
return_statement (50)
    on left: 43, on right: 17


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 12 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   11 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   13 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 25
    _READ      shift, and go to state 26

    statement             go to state 27
    read_data_statement   go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 20

   11 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 34


State 21

   41 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 35


State 22

   43 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 40
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 23

   26 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 44


State 24

   25 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 45


State 25

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 26

   20 read_data_statement: _READ . _ID $@2 _FROM data_section _DO statement

    _ID  shift, and go to state 46


State 27

   13 statement_list: statement_list statement .

    $default  reduce using rule 13 (statement_list)


State 28

   18 statement: read_data_statement .

    $default  reduce using rule 18 (statement)


State 29

   14 statement: compound_statement .

    $default  reduce using rule 14 (statement)


State 30

   15 statement: assignment_statement .

    $default  reduce using rule 15 (statement)


State 31

   16 statement: if_statement .

    $default  reduce using rule 16 (statement)


State 32

   39 if_statement: if_part .
   40             | if_part . _ELSE statement

    _ELSE  shift, and go to state 47

    $default  reduce using rule 39 (if_statement)


State 33

   17 statement: return_statement .

    $default  reduce using rule 17 (statement)


State 34

   11 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 11 (variable)


State 35

   41 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 48
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    rel_exp        go to state 49


State 36

   30 exp: _ID .
   36 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 35 ($@3)
    $default  reduce using rule 30 (exp)

    $@3  go to state 50


State 37

   33 literal: _INT_NUMBER .

    $default  reduce using rule 33 (literal)


State 38

   34 literal: _UINT_NUMBER .

    $default  reduce using rule 34 (literal)


State 39

   32 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 51
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 40

   28 num_exp: num_exp . _AROP exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 52
    _AROP       shift, and go to state 53


State 41

   27 num_exp: exp .

    $default  reduce using rule 27 (num_exp)


State 42

   29 exp: literal .

    $default  reduce using rule 29 (exp)


State 43

   31 exp: function_call .

    $default  reduce using rule 31 (exp)


State 44

   26 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 54
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 45

   13 statement_list: statement_list . statement
   25 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _RBRACKET  shift, and go to state 55
    _READ      shift, and go to state 26

    statement             go to state 27
    read_data_statement   go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 46

   20 read_data_statement: _READ _ID . $@2 _FROM data_section _DO statement

    $default  reduce using rule 19 ($@2)

    $@2  go to state 56


State 47

   40 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _READ      shift, and go to state 26

    statement             go to state 57
    read_data_statement   go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 48

   28 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 53
    _RELOP  shift, and go to state 58


State 49

   41 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 59


State 50

   36 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 60


State 51

   28 num_exp: num_exp . _AROP exp
   32 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 61
    _AROP    shift, and go to state 53


State 52

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 53

   28 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    exp            go to state 62
    literal        go to state 42
    function_call  go to state 43


State 54

   26 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   28 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 63
    _AROP       shift, and go to state 53


State 55

   25 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 25 (compound_statement)


State 56

   20 read_data_statement: _READ _ID $@2 . _FROM data_section _DO statement

    _FROM  shift, and go to state 64


State 57

   40 if_statement: if_part _ELSE statement .

    $default  reduce using rule 40 (if_statement)


State 58

   42 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 65
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 59

   41 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _READ      shift, and go to state 26

    statement             go to state 66
    read_data_statement   go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 60

   36 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    $default  reduce using rule 37 (argument)

    num_exp        go to state 67
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    argument       go to state 68


State 61

   32 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 32 (exp)


State 62

   28 num_exp: num_exp _AROP exp .

    $default  reduce using rule 28 (num_exp)


State 63

   26 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 26 (assignment_statement)


State 64

   20 read_data_statement: _READ _ID $@2 _FROM . data_section _DO statement

    _DATA  shift, and go to state 69

    data_section  go to state 70


State 65

   28 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 53

    $default  reduce using rule 42 (rel_exp)


State 66

   41 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 41 (if_part)


State 67

   28 num_exp: num_exp . _AROP exp
   38 argument: num_exp .

    _AROP  shift, and go to state 53

    $default  reduce using rule 38 (argument)


State 68

   36 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 71


State 69

   21 data_section: _DATA . konstante

    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38

    konstante  go to state 72
    literal    go to state 73


State 70

   20 read_data_statement: _READ _ID $@2 _FROM data_section . _DO statement
   22 data_section: data_section . _DATA konstante

    _DATA  shift, and go to state 74
    _DO    shift, and go to state 75


State 71

   36 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 36 (function_call)


State 72

   21 data_section: _DATA konstante .
   24 konstante: konstante . _ZAREZ literal

    _ZAREZ  shift, and go to state 76

    $default  reduce using rule 21 (data_section)


State 73

   23 konstante: literal .

    $default  reduce using rule 23 (konstante)


State 74

   22 data_section: data_section _DATA . konstante

    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38

    konstante  go to state 77
    literal    go to state 73


State 75

   20 read_data_statement: _READ _ID $@2 _FROM data_section _DO . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _ID        shift, and go to state 23
    _LBRACKET  shift, and go to state 24
    _READ      shift, and go to state 26

    statement             go to state 78
    read_data_statement   go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 76

   24 konstante: konstante _ZAREZ . literal

    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38

    literal  go to state 79


State 77

   22 data_section: data_section _DATA konstante .
   24 konstante: konstante . _ZAREZ literal

    _ZAREZ  shift, and go to state 76

    $default  reduce using rule 22 (data_section)


State 78

   20 read_data_statement: _READ _ID $@2 _FROM data_section _DO statement .

    $default  reduce using rule 20 (read_data_statement)


State 79

   24 konstante: konstante _ZAREZ literal .

    $default  reduce using rule 24 (konstante)
