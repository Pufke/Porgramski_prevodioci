Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 variable: _TYPE _ID _SEMICOLON

   12 statement_list: %empty
   13               | statement_list statement

   14 statement: compound_statement
   15          | assignment_statement
   16          | if_statement
   17          | return_statement
   18          | ternary_statement

   19 ternary_statement: rel_exp _UPITNIK value _COLUMN value

   20 value: variable
   21      | literal

   22 compound_statement: _LBRACKET statement_list _RBRACKET

   23 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   24 num_exp: exp
   25        | num_exp _AROP exp

   26 exp: literal
   27    | _ID
   28    | function_call
   29    | _LPAREN num_exp _RPAREN

   30 literal: _INT_NUMBER
   31        | _UINT_NUMBER

   32 $@2: %empty

   33 function_call: _ID $@2 _LPAREN argument _RPAREN

   34 argument: %empty
   35         | num_exp

   36 if_statement: if_part
   37             | if_part _ELSE statement

   38 if_part: _IF _LPAREN rel_exp _RPAREN statement

   39 rel_exp: num_exp _RELOP num_exp

   40 return_statement: _RETURN num_exp _SEMICOLON
   41                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 11
_IF (259) 38
_ELSE (260) 37
_RETURN (261) 40 41
_ID (262) 5 7 11 23 27 33
_INT_NUMBER (263) 30
_UINT_NUMBER (264) 31
_LPAREN (265) 5 29 33 38
_RPAREN (266) 5 29 33 38
_LBRACKET (267) 8 22
_RBRACKET (268) 8 22
_ASSIGN (269) 23
_SEMICOLON (270) 11 23 40 41
_AROP (271) 25
_RELOP (272) 39
_UPITNIK (273) 19
_COLUMN (274) 19
ONLY_IF (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
function_list (23)
    on left: 2 3, on right: 1 3
function (24)
    on left: 5, on right: 2 3
$@1 (25)
    on left: 4, on right: 5
parameter (26)
    on left: 6 7, on right: 5
body (27)
    on left: 8, on right: 5
variable_list (28)
    on left: 9 10, on right: 8 10
variable (29)
    on left: 11, on right: 10 20
statement_list (30)
    on left: 12 13, on right: 8 13 22
statement (31)
    on left: 14 15 16 17 18, on right: 13 37 38
ternary_statement (32)
    on left: 19, on right: 18
value (33)
    on left: 20 21, on right: 19
compound_statement (34)
    on left: 22, on right: 14
assignment_statement (35)
    on left: 23, on right: 15
num_exp (36)
    on left: 24 25, on right: 23 25 29 35 39 40
exp (37)
    on left: 26 27 28 29, on right: 24 25
literal (38)
    on left: 30 31, on right: 21 26
function_call (39)
    on left: 33, on right: 28
$@2 (40)
    on left: 32, on right: 33
argument (41)
    on left: 34 35, on right: 33
if_statement (42)
    on left: 36 37, on right: 16
if_part (43)
    on left: 38, on right: 36 37
rel_exp (44)
    on left: 39, on right: 19 38
return_statement (45)
    on left: 40 41, on right: 17


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 12 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   11 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   13 statement_list: statement_list . statement

    _IF           shift, and go to state 21
    _RETURN       shift, and go to state 22
    _ID           shift, and go to state 23
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26
    _LBRACKET     shift, and go to state 27
    _RBRACKET     shift, and go to state 28

    statement             go to state 29
    ternary_statement     go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    num_exp               go to state 33
    exp                   go to state 34
    literal               go to state 35
    function_call         go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    rel_exp               go to state 39
    return_statement      go to state 40


State 20

   11 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 41


State 21

   38 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 42


State 22

   40 return_statement: _RETURN . num_exp _SEMICOLON
   41                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26
    _SEMICOLON    shift, and go to state 44

    num_exp        go to state 45
    exp            go to state 34
    literal        go to state 35
    function_call  go to state 36


State 23

   23 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   27 exp: _ID .
   33 function_call: _ID . $@2 _LPAREN argument _RPAREN

    _ASSIGN  shift, and go to state 46

    _LPAREN   reduce using rule 32 ($@2)
    $default  reduce using rule 27 (exp)

    $@2  go to state 47


State 24

   30 literal: _INT_NUMBER .

    $default  reduce using rule 30 (literal)


State 25

   31 literal: _UINT_NUMBER .

    $default  reduce using rule 31 (literal)


State 26

   29 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26

    num_exp        go to state 48
    exp            go to state 34
    literal        go to state 35
    function_call  go to state 36


State 27

   22 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 12 (statement_list)

    statement_list  go to state 49


State 28

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 29

   13 statement_list: statement_list statement .

    $default  reduce using rule 13 (statement_list)


State 30

   18 statement: ternary_statement .

    $default  reduce using rule 18 (statement)


State 31

   14 statement: compound_statement .

    $default  reduce using rule 14 (statement)


State 32

   15 statement: assignment_statement .

    $default  reduce using rule 15 (statement)


State 33

   25 num_exp: num_exp . _AROP exp
   39 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 50
    _RELOP  shift, and go to state 51


State 34

   24 num_exp: exp .

    $default  reduce using rule 24 (num_exp)


State 35

   26 exp: literal .

    $default  reduce using rule 26 (exp)


State 36

   28 exp: function_call .

    $default  reduce using rule 28 (exp)


State 37

   16 statement: if_statement .

    $default  reduce using rule 16 (statement)


State 38

   36 if_statement: if_part .
   37             | if_part . _ELSE statement

    _ELSE  shift, and go to state 52

    $default  reduce using rule 36 (if_statement)


State 39

   19 ternary_statement: rel_exp . _UPITNIK value _COLUMN value

    _UPITNIK  shift, and go to state 53


State 40

   17 statement: return_statement .

    $default  reduce using rule 17 (statement)


State 41

   11 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 11 (variable)


State 42

   38 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26

    num_exp        go to state 33
    exp            go to state 34
    literal        go to state 35
    function_call  go to state 36
    rel_exp        go to state 54


State 43

   27 exp: _ID .
   33 function_call: _ID . $@2 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 32 ($@2)
    $default  reduce using rule 27 (exp)

    $@2  go to state 47


State 44

   41 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 41 (return_statement)


State 45

   25 num_exp: num_exp . _AROP exp
   40 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 55
    _AROP       shift, and go to state 50


State 46

   23 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26

    num_exp        go to state 56
    exp            go to state 34
    literal        go to state 35
    function_call  go to state 36


State 47

   33 function_call: _ID $@2 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 57


State 48

   25 num_exp: num_exp . _AROP exp
   29 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 58
    _AROP    shift, and go to state 50


State 49

   13 statement_list: statement_list . statement
   22 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF           shift, and go to state 21
    _RETURN       shift, and go to state 22
    _ID           shift, and go to state 23
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26
    _LBRACKET     shift, and go to state 27
    _RBRACKET     shift, and go to state 59

    statement             go to state 29
    ternary_statement     go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    num_exp               go to state 33
    exp                   go to state 34
    literal               go to state 35
    function_call         go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    rel_exp               go to state 39
    return_statement      go to state 40


State 50

   25 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26

    exp            go to state 60
    literal        go to state 35
    function_call  go to state 36


State 51

   39 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26

    num_exp        go to state 61
    exp            go to state 34
    literal        go to state 35
    function_call  go to state 36


State 52

   37 if_statement: if_part _ELSE . statement

    _IF           shift, and go to state 21
    _RETURN       shift, and go to state 22
    _ID           shift, and go to state 23
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26
    _LBRACKET     shift, and go to state 27

    statement             go to state 62
    ternary_statement     go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    num_exp               go to state 33
    exp                   go to state 34
    literal               go to state 35
    function_call         go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    rel_exp               go to state 39
    return_statement      go to state 40


State 53

   19 ternary_statement: rel_exp _UPITNIK . value _COLUMN value

    _TYPE         shift, and go to state 17
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    variable  go to state 63
    value     go to state 64
    literal   go to state 65


State 54

   38 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 66


State 55

   40 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 40 (return_statement)


State 56

   23 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   25 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 50


State 57

   33 function_call: _ID $@2 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26

    $default  reduce using rule 34 (argument)

    num_exp        go to state 68
    exp            go to state 34
    literal        go to state 35
    function_call  go to state 36
    argument       go to state 69


State 58

   29 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 29 (exp)


State 59

   22 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 22 (compound_statement)


State 60

   25 num_exp: num_exp _AROP exp .

    $default  reduce using rule 25 (num_exp)


State 61

   25 num_exp: num_exp . _AROP exp
   39 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 50

    $default  reduce using rule 39 (rel_exp)


State 62

   37 if_statement: if_part _ELSE statement .

    $default  reduce using rule 37 (if_statement)


State 63

   20 value: variable .

    $default  reduce using rule 20 (value)


State 64

   19 ternary_statement: rel_exp _UPITNIK value . _COLUMN value

    _COLUMN  shift, and go to state 70


State 65

   21 value: literal .

    $default  reduce using rule 21 (value)


State 66

   38 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF           shift, and go to state 21
    _RETURN       shift, and go to state 22
    _ID           shift, and go to state 23
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25
    _LPAREN       shift, and go to state 26
    _LBRACKET     shift, and go to state 27

    statement             go to state 71
    ternary_statement     go to state 30
    compound_statement    go to state 31
    assignment_statement  go to state 32
    num_exp               go to state 33
    exp                   go to state 34
    literal               go to state 35
    function_call         go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    rel_exp               go to state 39
    return_statement      go to state 40


State 67

   23 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 23 (assignment_statement)


State 68

   25 num_exp: num_exp . _AROP exp
   35 argument: num_exp .

    _AROP  shift, and go to state 50

    $default  reduce using rule 35 (argument)


State 69

   33 function_call: _ID $@2 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 72


State 70

   19 ternary_statement: rel_exp _UPITNIK value _COLUMN . value

    _TYPE         shift, and go to state 17
    _INT_NUMBER   shift, and go to state 24
    _UINT_NUMBER  shift, and go to state 25

    variable  go to state 63
    value     go to state 73
    literal   go to state 65


State 71

   38 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 38 (if_part)


State 72

   33 function_call: _ID $@2 _LPAREN argument _RPAREN .

    $default  reduce using rule 33 (function_call)


State 73

   19 ternary_statement: rel_exp _UPITNIK value _COLUMN value .

    $default  reduce using rule 19 (ternary_statement)
